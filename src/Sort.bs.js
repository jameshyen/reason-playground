// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Caml_obj = require("bs-platform/lib/js/caml_obj.js");

var numbers = /* :: */[
  2,
  /* :: */[
    4,
    /* :: */[
      3,
      /* :: */[
        8,
        /* :: */[
          7,
          /* :: */[
            1,
            /* :: */[
              5,
              /* [] */0
            ]
          ]
        ]
      ]
    ]
  ]
];

var bools = /* :: */[
  true,
  /* :: */[
    false,
    /* :: */[
      true,
      /* :: */[
        false,
        /* [] */0
      ]
    ]
  ]
];

function say(_l) {
  while(true) {
    var l = _l;
    if (l) {
      console.log(l[0]);
      _l = l[1];
      continue ;
    } else {
      console.log("End.");
      return /* () */0;
    }
  };
}

say(numbers);

function all(_l) {
  while(true) {
    var l = _l;
    if (l) {
      if (l[0]) {
        _l = l[1];
        continue ;
      } else {
        console.log("Uh oh!");
        return /* () */0;
      }
    } else {
      console.log("All good.");
      return /* () */0;
    }
  };
}

all(bools);

function max(_res, _l) {
  while(true) {
    var l = _l;
    var res = _res;
    if (l) {
      var tl = l[1];
      var hd = l[0];
      if (res) {
        var $$int = res[0];
        var match = hd > $$int;
        _l = tl;
        if (match) {
          _res = /* Some */[hd];
          continue ;
        } else {
          _res = /* Some */[$$int];
          continue ;
        }
      } else {
        _l = tl;
        _res = /* Some */[hd];
        continue ;
      }
    } else if (res) {
      return res[0];
    } else {
      return -1;
    }
  };
}

console.log(max(/* None */0, numbers));

function bubbleSort(_l) {
  while(true) {
    var l = _l;
    var sorted;
    if (l) {
      var match = l[1];
      var hd1 = l[0];
      if (match) {
        var tl = match[1];
        var hd2 = match[0];
        var match$1 = hd1 > hd2;
        sorted = match$1 ? /* :: */[
            hd2,
            bubbleSort(/* :: */[
                  hd1,
                  tl
                ])
          ] : /* :: */[
            hd1,
            bubbleSort(/* :: */[
                  hd2,
                  tl
                ])
          ];
      } else {
        sorted = /* :: */[
          hd1,
          /* [] */0
        ];
      }
    } else {
      sorted = /* [] */0;
    }
    var match$2 = Caml_obj.caml_equal(l, sorted);
    if (match$2) {
      return l;
    } else {
      _l = sorted;
      continue ;
    }
  };
}

console.log(numbers);

console.log(bubbleSort(numbers));

exports.numbers = numbers;
exports.bools = bools;
exports.say = say;
exports.all = all;
exports.max = max;
exports.bubbleSort = bubbleSort;
/*  Not a pure module */
